apiVersion: v1
kind: Secret
metadata:
  name: wordpress
  labels:
    app: wordpress
type: Opaque
data:
  wordpress-password: ${DATABASE_PASSWORD}
  smtp-password: ""
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: wordpress
  labels:
    app: wordpress
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "10Gi"
---
apiVersion: v1
kind: Service
metadata:
  name: wordpress
  labels:
    app: wordpress
spec:
  type: LoadBalancer
  ports:
  - name: http
    port: 80
    targetPort: http
  - name: https
    port: 443
    targetPort: https
  selector:
    app: wordpress
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: wordpress
  labels:
    app: wordpress
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: wordpress
    spec:
      containers:
      - name: wordpress
        image: "bitnami/wordpress:latest"
        imagePullPolicy: "Always"
        env:
        - name: MARIADB_HOST
          valueFrom:
            secretKeyRef:
              name: wordpress-mysql-secret
              key: host
        - name: MARIADB_PORT_NUMBER
          valueFrom:
            secretKeyRef:
              name: wordpress-mysql-secret
              key: port
        - name: WORDPRESS_DATABASE_NAME
          valueFrom:
            secretKeyRef:
              name: wordpress-mysql-secret
              key: database
        - name: WORDPRESS_DATABASE_USER
          valueFrom:
            secretKeyRef:
              name: wordpress-mysql-secret
              key: username
        - name: WORDPRESS_DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: wordpress-mysql-secret
              key: password
        - name: WORDPRESS_USERNAME
          value: ${DATABASE_USER}
        - name: WORDPRESS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: wordpress
              key: wordpress-password
        - name: WORDPRESS_EMAIL
          value: "user@example.com"
        - name: WORDPRESS_FIRST_NAME
          value: "FirstName"
        - name: WORDPRESS_LAST_NAME
          value: "LastName"
        - name: WORDPRESS_BLOG_NAME
          value: "User's Blog!"
        - name: SMTP_HOST
          value: ""
        - name: SMTP_PORT
          value: ""
        - name: SMTP_USER
          value: ""
        - name: SMTP_PASSWORD
          valueFrom:
            secretKeyRef:
              name: wordpress
              key: smtp-password
        - name: SMTP_USERNAME
          value: ""
        - name: SMTP_PROTOCOL
          value: ""
        ports:
        - name: http
          containerPort: 80
        - name: https
          containerPort: 443
        livenessProbe:
          httpGet:
            path: /wp-login.php
            port: http
          failureThreshold: 6
          initialDelaySeconds: 120
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /wp-login.php
            port: http
          failureThreshold: 6
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        volumeMounts:
        - mountPath: /bitnami/apache
          name: wordpress-data
          subPath: apache
        - mountPath: /bitnami/wordpress
          name: wordpress-data
          subPath: wordpress
        - mountPath: /bitnami/php
          name: wordpress-data
          subPath: php
        resources:
          requests:
            cpu: 300m
            memory: 512Mi
      volumes:
      - name: wordpress-data
        persistentVolumeClaim:
          claimName: wordpress
---
apiVersion: servicecatalog.k8s.io/v1beta1
kind: ServiceBinding
metadata:
  name: wordpress-mysql-binding
  labels:
    app: wordpress
spec:
  instanceRef:
    name: wordpress-mysql-instance
  secretName: wordpress-mysql-secret
---
apiVersion: servicecatalog.k8s.io/v1beta1
kind: ServiceInstance
metadata:
  name: wordpress-mysql-instance
  labels:
    app: wordpress
spec:
  clusterServiceClassExternalName: ${SERVICE_CLASS}
  clusterServicePlanExternalName: ${SERVICE_PLAN}
  parameters:
    location: ${LOCATION}
    resourceGroup: ${RESOURCE_GROUP}
    sslEnforcement: ${SSL_ENFORCEMENT}
    firewallRules:
    - startIPAddress: "0.0.0.0"
      endIPAddress: "255.255.255.255"
      name: "AllowAll"
---
parameters:
- name: DATABASE_USER
  description: Database user name
  value: user
- name: DATABASE_PASSWORD
  description: Database user password
  generate: expression
  from: "[a-zA-Z0-9]{16}"
- name: LOCATION
  description: location
  value: eastus
- name: RESOURCE_GROUP
  description: Resource group
  value: default
- name: SSL_ENFORCEMENT
  description: SSL enforcement
  value: disabled
- name: SERVICE_CLASS
  description: Service class
  value: azure-mysql
- name: SERVICE_PLAN
  description: Service plan
  value: standard100